from aiogram.filters import Command
from config import *
from aiogram import types
from aiogram import F, Router, Bot
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from db import Db
import json
import requests

API_TOKEN = BOT_TOKEN
bot = Bot(token=API_TOKEN)
router = Router()
bot_database = Db('users_db.db')

keyboard_list = [
    [KeyboardButton(text="–õ–∏—à–Ω–∏–µ"), KeyboardButton(text="–ü–µ—Ä–µ–¥–µ–ª–∫–∞")],
    [KeyboardButton(text="–£6"), KeyboardButton(text="–•—Ä–∞–Ω–µ–Ω–∏–µ")]
]
keyboard = ReplyKeyboardMarkup(keyboard=keyboard_list, resize_keyboard=True)


@router.message(Command('start'))
async def start(message: types.Message):
    if not bot_database.check_user(message.from_user.id):
        await bot.send_message(message.from_user.id,
                               text="–ü—Ä–∏–≤–µ—Ç. –≠—Ç–æ —Å–∫–ª–∞–¥—Å–∫–æ–π –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –¶–°–¢–ö.\n–Ø —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ —à–∏–Ω –ø–æ "
                                    "—è—á–µ–π–∫–∞–º —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö.", reply_markup=keyboard)
        bot_database.add_user(message.from_user.id, message.from_user.username)
    else:
        await bot.send_message(message.from_user.id,
                               text="–ü—Ä–∏–≤–µ—Ç. –≠—Ç–æ —Å–∫–ª–∞–¥—Å–∫–æ–π –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –¶–°–¢–ö.\n–Ø —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ —à–∏–Ω –ø–æ "
                                    "—è—á–µ–π–∫–∞–º —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö.", reply_markup=keyboard)


@router.message(F.text == "–õ–∏—à–Ω–∏–µ")
async def ans_message(message: types.Message):
    msg = await bot.send_message(message.from_user.id, "üîÑ–ü–æ–¥–æ–∂–¥–∏—Ç–µ —á—É—Ç—å-—á—É—Ç—å")
    r = requests.get('http://176.67.54.67:777/UT10/hs/tire/case', headers=HEADERS)
    r.encoding = None
    if r.status_code == 200:
        data = json.loads(r.text)["–Ø—á–µ–π–∫–∏"][0]
        text = f'{data["–°–∫–ª–∞–¥—Å–∫–∞—è–Ø—á–µ–π–∫–∞"]}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ–†–∞—Å—Ö–æ–¥ {data["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ–†–∞—Å—Ö–æ–¥"]}\n–ö–æ–Ω–µ—á–Ω—ã–π–û—Å—Ç–∞—Ç–æ–∫ {data["–ö–æ–Ω–µ—á–Ω—ã–π–û—Å—Ç–∞—Ç–æ–∫"]}'
        await bot.send_message(message.from_user.id, text, reply_markup=keyboard)
        await bot.delete_message(message.from_user.id, msg.message_id)
    else:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.", reply_markup=keyboard)
        await bot.delete_message(message.from_user.id, msg.message_id)


@router.message(F.text == "–ü–µ—Ä–µ–¥–µ–ª–∫–∞")
async def ans_message(message: types.Message):
    msg = await bot.send_message(message.from_user.id, "üîÑ–ü–æ–¥–æ–∂–¥–∏—Ç–µ —á—É—Ç—å-—á—É—Ç—å")
    r = requests.get('http://176.67.54.67:777/UT10/hs/tire/case', headers=HEADERS)
    r.encoding = None
    if r.status_code == 200:
        data = json.loads(r.text)["–Ø—á–µ–π–∫–∏"][1]
        text = f'{data["–°–∫–ª–∞–¥—Å–∫–∞—è–Ø—á–µ–π–∫–∞"]}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ–†–∞—Å—Ö–æ–¥ {data["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ–†–∞—Å—Ö–æ–¥"]}\n–ö–æ–Ω–µ—á–Ω—ã–π–û—Å—Ç–∞—Ç–æ–∫ {data["–ö–æ–Ω–µ—á–Ω—ã–π–û—Å—Ç–∞—Ç–æ–∫"]}'
        await bot.send_message(message.from_user.id, text, reply_markup=keyboard)
        await bot.delete_message(message.from_user.id, msg.message_id)
    else:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.", reply_markup=keyboard)
        await bot.delete_message(message.from_user.id, msg.message_id)


@router.message(F.text == "–£6")
async def ans_message(message: types.Message):
    msg = await bot.send_message(message.from_user.id, "üîÑ–ü–æ–¥–æ–∂–¥–∏—Ç–µ —á—É—Ç—å-—á—É—Ç—å")
    r = requests.get('http://176.67.54.67:777/UT10/hs/tire/case', headers=HEADERS)
    r.encoding = None
    if r.status_code == 200:
        data = json.loads(r.text)["–Ø—á–µ–π–∫–∏"][2]
        text = f'{data["–°–∫–ª–∞–¥—Å–∫–∞—è–Ø—á–µ–π–∫–∞"]}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ–†–∞—Å—Ö–æ–¥ {data["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ–†–∞—Å—Ö–æ–¥"]}\n–ö–æ–Ω–µ—á–Ω—ã–π–û—Å—Ç–∞—Ç–æ–∫ {data["–ö–æ–Ω–µ—á–Ω—ã–π–û—Å—Ç–∞—Ç–æ–∫"]}'
        await bot.send_message(message.from_user.id, text, reply_markup=keyboard)
        await bot.delete_message(message.from_user.id, msg.message_id)
    else:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.", reply_markup=keyboard)
        await bot.delete_message(message.from_user.id, msg.message_id)


@router.message(F.text == "–•—Ä–∞–Ω–µ–Ω–∏–µ")
async def ans_message(message: types.Message):
    msg = await bot.send_message(message.from_user.id, "üîÑ–ü–æ–¥–æ–∂–¥–∏—Ç–µ —á—É—Ç—å-—á—É—Ç—å")
    r = requests.get('http://176.67.54.67:777/UT10/hs/tire/case', headers=HEADERS)
    r.encoding = None
    if r.status_code == 200:
        data = json.loads(r.text)["–Ø—á–µ–π–∫–∏"][3]
        text = f'{data["–°–∫–ª–∞–¥—Å–∫–∞—è–Ø—á–µ–π–∫–∞"]}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ–†–∞—Å—Ö–æ–¥ {data["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ–†–∞—Å—Ö–æ–¥"]}\n–ö–æ–Ω–µ—á–Ω—ã–π–û—Å—Ç–∞—Ç–æ–∫ {data["–ö–æ–Ω–µ—á–Ω—ã–π–û—Å—Ç–∞—Ç–æ–∫"]}'
        await bot.send_message(message.from_user.id, text, reply_markup=keyboard)
        await bot.delete_message(message.from_user.id, msg.message_id)
    else:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.", reply_markup=keyboard)
        await bot.delete_message(message.from_user.id, msg.message_id)


@router.message(F.text)
async def ans_message(message: types.Message):
    msg = await bot.send_message(message.from_user.id, "üîÑ–ü–æ–¥–æ–∂–¥–∏—Ç–µ —á—É—Ç—å-—á—É—Ç—å")
    r = requests.get(URL, headers=HEADERS)
    r.encoding = None
    if r.status_code == 200:
        data = json.loads(r.text)["–Ø—á–µ–π–∫–∏"]

        size_input = message.text.strip()
        size_parts = size_input.replace('-', ' ').split()

        filtered_items = [
            item for item in data
            if all(part.lower() in item["–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞"].lower() for part in size_parts)
        ]

        if not filtered_items:
            await message.reply("–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", reply_markup=keyboard)
            await bot.delete_message(message.from_user.id, msg.message_id)
            return

        response = ""
        for item in filtered_items:
            response += (f"{item['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞']}\n"
                         f"–°–∫–ª–∞–¥—Å–∫–∞—è —è—á–µ–π–∫–∞: {item['–°–∫–ª–∞–¥—Å–∫–∞—è–Ø—á–µ–π–∫–∞']}\n"
                         f"–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: {item['–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ']}\n"
                         f"–û—Å—Ç–∞—Ç–æ–∫: {item['–ö–æ–Ω–µ—á–Ω—ã–π–û—Å—Ç–∞—Ç–æ–∫']}\n\n\n")

        max_length = 4096
        for i in range(0, len(response), max_length):
            await message.reply(response[i:i + max_length], reply_markup=keyboard)
        await bot.delete_message(message.from_user.id, msg.message_id)
    else:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.", reply_markup=keyboard)
        await bot.delete_message(message.from_user.id, msg.message_id)
